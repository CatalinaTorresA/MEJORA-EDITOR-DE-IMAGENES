<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <title>Image Editor</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    canvas {
      margin: 10px;
      border: 1px solid #ccc;
      display: block;
    }
    .controls {
      margin-top: 10px;
    }
    .slider-group {
      margin: 5px 0;
    }
    label {
      margin-right: 10px;
    }
  </style>
</head>
<body>
  <h4>Image Editor 0.2</h4>
  <label for="image">Seleccione imagen:</label>
  <input type="file" id="image" accept="image/png, image/jpeg"><br>
  <hr>

  <canvas id="canvas"></canvas>
  <canvas id="canvas2"></canvas>

  <div class="controls">
    <button id="gris">Escala de grises</button>
    <button id="gris2">Escala de grises 2</button>
    <button id="sepia">Sepia</button>
    <button id="reset">Restaurar original</button>
  </div>

  <div class="controls">
    <div class="slider-group">
      <label for="rSlider">Rojo:</label>
      <input type="range" id="rSlider" min="0" max="200" value="100">
    </div>
    <div class="slider-group">
      <label for="gSlider">Verde:</label>
      <input type="range" id="gSlider" min="0" max="200" value="100">
    </div>
    <div class="slider-group">
      <label for="bSlider">Azul:</label>
      <input type="range" id="bSlider" min="0" max="200" value="100">
    </div>
  </div>

  <script>
    let originalImageData = null;
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    const canvas2 = document.getElementById("canvas2");
    const ctx2 = canvas2.getContext("2d");

    const imageInput = document.getElementById("image");
    const rSlider = document.getElementById("rSlider");
    const gSlider = document.getElementById("gSlider");
    const bSlider = document.getElementById("bSlider");

    function drawImageToCanvas(img) {
      canvas.width = img.width;
      canvas.height = img.height;
      canvas2.width = img.width;
      canvas2.height = img.height;

      ctx.drawImage(img, 0, 0);
      originalImageData = ctx.getImageData(0, 0, img.width, img.height);
      ctx2.putImageData(originalImageData, 0, 0);
    }

    function loadImage(e) {
      const file = e.target.files[0];
      const reader = new FileReader();
      reader.onload = function () {
        const img = new Image();
        img.onload = () => drawImageToCanvas(img);
        img.src = reader.result;
      };
      reader.readAsDataURL(file);
    }

    function resetImage() {
      if (originalImageData) {
        ctx.drawImage(canvas, 0, 0);
        ctx2.putImageData(originalImageData, 0, 0);
        rSlider.value = 100;
        gSlider.value = 100;
        bSlider.value = 100;
      }
    }

    function applyFilter(transform) {
      const imgTmpData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imgTmpData.data;
      for (let i = 0; i < data.length; i += 4) {
        transform(data, i);
      }
      ctx2.putImageData(imgTmpData, 0, 0);
    }

    function escalaGrises() {
      applyFilter((data, i) => {
        const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;
        data[i] = data[i + 1] = data[i + 2] = avg;
      });
    }

    function escalaGrises2() {
      applyFilter((data, i) => {
        const gray = data[i]*0.33 + data[i+1]*0.52 + data[i+2]*0.15;
        data[i] = data[i + 1] = data[i + 2] = gray;
      });
    }

    function sepia() {
      applyFilter((data, i) => {
        const r = data[i], g = data[i + 1], b = data[i + 2];
        data[i]     = r*0.393 + g*0.769 + b*0.189;
        data[i + 1] = r*0.349 + g*0.686 + b*0.168;
        data[i + 2] = r*0.272 + g*0.534 + b*0.131;
      });
    }

    function ajustarRGB() {
      const rFactor = rSlider.value / 100;
      const gFactor = gSlider.value / 100;
      const bFactor = bSlider.value / 100;

      applyFilter((data, i) => {
        data[i]     = Math.min(255, data[i] * rFactor);
        data[i + 1] = Math.min(255, data[i + 1] * gFactor);
        data[i + 2] = Math.min(255, data[i + 2] * bFactor);
      });
    }

    document.getElementById("gris").addEventListener("click", escalaGrises);
    document.getElementById("gris2").addEventListener("click", escalaGrises2);
    document.getElementById("sepia").addEventListener("click", sepia);
    document.getElementById("reset").addEventListener("click", resetImage);
    imageInput.addEventListener("change", loadImage);
    rSlider.addEventListener("input", ajustarRGB);
    gSlider.addEventListener("input", ajustarRGB);
    bSlider.addEventListener("input", ajustarRGB);
  </script>
</body>
</html>
